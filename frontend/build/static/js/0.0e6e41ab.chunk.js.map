{"version":3,"file":"static/js/0.0e6e41ab.chunk.js","mappings":"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","sources":["places/pages/NewPlaceTest.js","utils/Button.js","utils/ImageUpload.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../../utils/Button\";\r\nimport ImageUpload from \"../../utils/ImageUpload\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst NewPlaceTest = ({ fillProgress }) => {\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  // console.log(auth.userId);\r\n  const [cred, setCred] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    address: \"\",\r\n    coordinates: {\r\n      lat: 30.406616,\r\n      long: -10.51515,\r\n    },\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [pickedFile, setPickedFile] = useState();\r\n\r\n  const addPicHandler = (id, picked) => {\r\n    if (!picked) {\r\n      toast.error(\"Must upload a place picture\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n    setPickedFile(picked);\r\n  };\r\n\r\n  const handleClick = async (event) => {\r\n    event.preventDefault();\r\n    if (cred.title === \"\" || cred.address === \"\") {\r\n      setError(\"This field can't be empty !!\");\r\n      return;\r\n    }\r\n\r\n    if (!error) {\r\n      fillProgress(50);\r\n      const data = {\r\n        title: cred.title,\r\n        desc: cred.desc,\r\n        address: cred.address,\r\n        uploader: auth.userId,\r\n        placePic : pickedFile,\r\n      };\r\n      console.log(data);\r\n      try {\r\n        // const formData = new FormData() ;\r\n        // formData.append('title',cred.title)\r\n        // formData.append('desc',cred.desc)\r\n        // formData.append('address',cred.address)\r\n        // formData.append('uploader',auth.userId)\r\n        // formData.append('coordinates',cred.coordinates)\r\n        // formData.append('place-pic', pickedFile)\r\n\r\n        const formData = new FormData();\r\n\r\n        Object.entries(data).forEach(([key, value]) => {\r\n          formData.append(key, value);\r\n        });\r\n\r\n        for (const [key, value] of formData) {\r\n          console.log(key, \" : \", value);\r\n        }\r\n\r\n        const response = await fetch(process.env.REACT_APP_BACKEND_URL+\"/api/place\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization : 'Bearer '+auth.token\r\n          },\r\n          body: formData,\r\n        });\r\n        const resBody = response.json();\r\n        if (!response.ok) throw new Error(resBody.message);\r\n        fillProgress(100);\r\n        navigate(`/place/user/${auth.userId}`);\r\n      } catch (err) {\r\n        fillProgress(100);\r\n        console.log(\"kuchh to grbr h daya\");\r\n        toast.error(err.message.toString(), {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCred((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n    setError(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <div className=\" bg-slate-50 min-h-screen w-full bg-fixed\">\r\n        <div className=\" text-center font-bold text-3xl text-gray-600 font-mono pt-5 uppercase \">\r\n          add new place\r\n        </div>\r\n        <hr className=\"w-96 h-1 mx-auto  bg-gray-100 border-0 rounded  dark:bg-gray-500 mb-4\"></hr>\r\n        <div className=\" bg-transparent w-11/12 h-full mx-auto flex align-center justify-center \">\r\n          <div className=\"bg-white min-h-[580px] shadow-lg w-[500px] max-w-lg py-5 my-12  hover:scale-105 duration-300 ease-out\">\r\n            <div className=\"w-11/12 m-auto\">\r\n              <form action=\"\">\r\n                <h1 className=\" mt-8 text-xl text-center sm:text-4xl capitalize font-bold font-mono text-gray-500 \">\r\n                  Title\r\n                </h1>\r\n                <div className=\"mb-3 pt-0\">\r\n                  <input\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    placeholder=\"name of the place ...\"\r\n                    className=\"px-3 py-3 placeholder-slate-300 text-slate-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring w-full\"\r\n                    onChange={handleChange}\r\n                    value={cred.title}\r\n                    required\r\n                  />\r\n                  {cred.title === \"\" && error && (\r\n                    <h1 className=\"text-red-700 italic\">{error}</h1>\r\n                  )}\r\n                </div>\r\n                <h1 className=\" mt-8 text-xl text-center sm:text-4xl capitalize font-bold font-mono text-gray-500 \">\r\n                  description\r\n                </h1>\r\n                <div className=\"mb-3 pt-0\">\r\n                  <input\r\n                    autoComplete=\"off\"\r\n                    name=\"desc\"\r\n                    type=\"textarea\"\r\n                    placeholder=\"write something about the place ...\"\r\n                    className=\"my-3 min-h-[100px] px-3 py-3 placeholder-slate-300 text-slate-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring w-full\"\r\n                    onChange={handleChange}\r\n                    value={cred.desc}\r\n                  />\r\n                </div>\r\n                <h1 className=\" mt-8 text-xl text-center sm:text-4xl capitalize font-bold font-mono text-gray-500 \">\r\n                  Address\r\n                </h1>\r\n                <div className=\"mb-3 pt-0\">\r\n                  <input\r\n                    autoComplete=\"off\"\r\n                    name=\"address\"\r\n                    type=\"textarea\"\r\n                    placeholder=\"Address of the place ...\"\r\n                    className=\"my-3  px-3 py-3 placeholder-slate-300 text-slate-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring w-full\"\r\n                    onChange={handleChange}\r\n                    value={cred.address}\r\n                  />\r\n                  {cred.address === \"\" && error && (\r\n                    <h1 className=\"text-red-700 italic\">{error}</h1>\r\n                  )}\r\n                </div>\r\n                <ImageUpload\r\n                  label={\"Upload picture of the place here !! \"}\r\n                  onInput={addPicHandler}\r\n                  id={\"place-pic\"}\r\n                />\r\n                <div className=\"flex justify-center\">\r\n                  <Button\r\n                    colour={\"blue\"}\r\n                    text={\"Add Place\"}\r\n                    afterClick={handleClick}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlaceTest;\r\n","import React from 'react'\r\nconst Button = (props) => {\r\n   const look = `inline-block px-6 py-2.5 bg-white text-blue-700 font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:text-white hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 focus:text-white active:bg-blue-800 active:text-white  active:shadow-lg transition duration-150 ease-in-out` ;\r\n    \r\n  return (\r\n    <button\r\n    type=\"button\"\r\n    className={look}\r\n    onClick={props.afterClick}\r\n  >\r\n    {props.text}\r\n  </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React , {useRef,useState , useEffect} from \"react\";\r\nimport Button from '../utils/Button'\r\nconst ImageUpload = (props) => {\r\n    const [file, setFile] = useState() ;\r\n    const [previewUrl, setPreviewUrl] = useState() ;\r\n    const filePicker = useRef() ;\r\n\r\n  //preview generator :\r\n  useEffect(() => {\r\n    if(!file) return ;\r\n    const fileReader = new FileReader() ;\r\n    fileReader.onload = () => { \r\n      setPreviewUrl(fileReader.result)\r\n     } ;\r\n     fileReader.readAsDataURL(file) ;\r\n  \r\n\r\n  }, [file])\r\n  \r\n\r\n    const pick = () => { \r\n      filePicker.current.click() ;  \r\n     }\r\n    const pickHandler = (e) => { \r\n      let pickedFile  ;\r\n      if(e.target.files && e.target.files.length ===1){\r\n        pickedFile = e.target.files[0] ;\r\n        setFile(pickedFile) ;\r\n        console.log(e.target.files[0])\r\n      }\r\n      props.onInput(props.id , pickedFile)\r\n     }\r\n  return (\r\n    <>\r\n     <div className=\"flex justify-center\">\r\n  <div className=\"mb-3 w-full flex-col justify-center\">\r\n    <label htmlFor={props.id} className=\"form-label inline-block mb-2 text-gray-500 text-lg italic font-mono text-center w-full\"> {props.label}</label>\r\n    <input\r\n    onChange={pickHandler}\r\n    ref={filePicker}\r\n    className=\"form-control\r\n    hidden\r\n    w-full\r\n    px-3\r\n    py-1.5\r\n    text-base\r\n    font-normal\r\n    text-gray-700\r\n    bg-white bg-clip-padding\r\n    border border-solid border-gray-300\r\n    rounded\r\n    transition\r\n    ease-in-out\r\n    m-0\r\n    focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\" type=\"file\" \r\n    id={props.id} \r\n    accept = \".jpg,.jpeg,.png\"\r\n\r\n    />\r\n\r\n    <div className=\"mt-2 container w-1/2 m-auto  border-dashed border-gray-300  border-2\">\r\n      {previewUrl && <img src={previewUrl} alt=\"picked-img\" /> }  \r\n      {!previewUrl && <p className=\"w-full text-center my-auto\">Please pick an image</p> }  \r\n    </div>\r\n   <div className=\"mt-2 flex justify-center\">\r\n   <Button text ={\"Upload Image\"} colour={\"blue\"} afterClick ={pick}/>\r\n   </div>\r\n  </div>\r\n        \r\n</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"names":["fillProgress","auth","useContext","AuthContext","navigate","useNavigate","useState","title","desc","address","coordinates","lat","long","cred","setCred","error","setError","pickedFile","setPickedFile","handleClick","event","preventDefault","data","uploader","userId","placePic","console","log","formData","FormData","Object","entries","forEach","key","value","append","fetch","process","method","headers","Authorization","token","body","response","resBody","json","ok","Error","message","toast","toString","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleChange","e","target","name","prevState","newestOnTop","rtl","pauseOnFocusLoss","className","action","type","placeholder","onChange","required","autoComplete","label","onInput","id","picked","colour","text","afterClick","props","onClick","file","setFile","previewUrl","setPreviewUrl","filePicker","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","htmlFor","files","length","ref","accept","src","alt","current","click"],"sourceRoot":""}